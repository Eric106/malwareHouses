from dataclasses import dataclass, field
from json import loads
from vt import Client


@dataclass(frozen=True)
class VirusTotalAnalyzer():

    config_json : str = field(init=True, default='config.json')
    client : Client = field(init=False)

    def __post_init__(self):
        conf_file = open(self.config_json,'r')
        api_key = loads(conf_file.read())['api_key']
        conf_file.close()
        object.__setattr__(self,'client', Client(api_key))

    def scan_ip(self, ip : str) -> dict:
        scan = self.client.get_json(f'/ip_addresses/{ip}')
        return scan

    def is_malicious_ip(self, scan: dict) -> bool:
        if scan['data']['type'] ==  'ip_address':
            return scan['data']['attributes']['last_analysis_stats']['malicious'] > 0

    def get_ip_subnet(self, scan: dict) -> str:
        return scan['data']['attributes']['network']

